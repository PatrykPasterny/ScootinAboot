// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	model "scootinAboot/internal/module/tracker/model"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockTrackerService is a mock of TrackerService interface.
type MockTrackerService struct {
	ctrl     *gomock.Controller
	recorder *MockTrackerServiceMockRecorder
}

// MockTrackerServiceMockRecorder is the mock recorder for MockTrackerService.
type MockTrackerServiceMockRecorder struct {
	mock *MockTrackerService
}

// NewMockTrackerService creates a new mock instance.
func NewMockTrackerService(ctrl *gomock.Controller) *MockTrackerService {
	mock := &MockTrackerService{ctrl: ctrl}
	mock.recorder = &MockTrackerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTrackerService) EXPECT() *MockTrackerServiceMockRecorder {
	return m.recorder
}

// FreeScooter mocks base method.
func (m *MockTrackerService) FreeScooter(scooterUUID uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FreeScooter", scooterUUID)
	ret0, _ := ret[0].(error)
	return ret0
}

// FreeScooter indicates an expected call of FreeScooter.
func (mr *MockTrackerServiceMockRecorder) FreeScooter(scooterUUID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FreeScooter", reflect.TypeOf((*MockTrackerService)(nil).FreeScooter), scooterUUID)
}

// TrackScooter mocks base method.
func (m *MockTrackerService) TrackScooter(scooterUUID uuid.UUID, scooter *model.TrackerScooter) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TrackScooter", scooterUUID, scooter)
	ret0, _ := ret[0].(error)
	return ret0
}

// TrackScooter indicates an expected call of TrackScooter.
func (mr *MockTrackerServiceMockRecorder) TrackScooter(scooterUUID, scooter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TrackScooter", reflect.TypeOf((*MockTrackerService)(nil).TrackScooter), scooterUUID, scooter)
}
